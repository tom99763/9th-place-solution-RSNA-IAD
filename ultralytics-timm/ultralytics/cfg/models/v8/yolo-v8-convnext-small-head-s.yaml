nc: 80
scales:
  n: [0.33, 0.50, 768]

backbone:
  # 0: full convnext outputs
  - [-1, 1, Timm, [768, 'convnext_small.in12k_ft_in1k', True, True, 0, True]]
  # use layers 1, 2, 3 from the backbone:
  - [0, 1, Index, [192, 1]]   # P3 → 192 ch @ 28×28
  - [0, 1, Index, [384, 2]]   # P4 → 384 ch @ 14×14
  - [0, 1, Index, [768, 3]]   # P5 → 768 ch @ 7×7
  # SPPF & PSA on P5
  - [-1, 1, SPPF, [768, 5]]
  - [-1, 2, C2PSA, [768]]

# adjusted YOLOv8 head based on YOLOv11 structure, using C2f modules
head:
  # P5 → upsample → concat with P4 → reduce → C2f
  - [5,    1, nn.Upsample, [None, 2, "nearest"]]   # 6: 768×14×14
  - [[6, 2], 1, Concat,        [1]]                 # 7: 768+384=1152 ch
  - [7,    1, Conv,            [768, 1, 1]]         # 8: →768 ch
  - [8,    2, C2f,             [768]]              # 9

  # P4 → upsample → concat with P3 → reduce → C2f
  - [9,    1, nn.Upsample, [None, 2, "nearest"]]   # 10: 768×28×28
  - [[10, 1], 1, Concat,       [1]]                 # 11: 768+192=960 ch
  - [11,   1, Conv,            [384, 1, 1]]         # 12: →384 ch
  - [12,   2, C2f,             [384]]              # 13

  # bottom-up path: P3 → downsample → concat with head P4 → reduce → C2f
  - [13,   1, Conv,            [384, 3, 2]]         # 14: 384×14×14
  - [[14, 9], 1, Concat,       [1]]                 # 15: 384+768=1152 ch
  - [15,   1, Conv,            [768, 1, 1]]         # 16: →768 ch
  - [16,   2, C2f,             [768]]              # 17

  # bottom-up → P5: → downsample → concat with original P5 → reduce → C2f
  - [17,   1, Conv,            [768, 3, 2]]         # 18: 768×7×7
  - [[18, 5], 1, Concat,       [1]]                 # 19: 768+768=1536 ch
  - [19,   1, Conv,            [768, 1, 1]]         # 20: →768 ch
  - [20,   2, C2f,             [768]]              # 21

  # Final detect on (P3=13, P4=17, P5=21)
  - [[13, 17, 21], 1, Detect,   [nc]]
